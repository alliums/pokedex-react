[{"/Users/biggiecheese/projects/react1/my-app/src/index.js":"1","/Users/biggiecheese/projects/react1/my-app/src/App.js":"2","/Users/biggiecheese/projects/react1/my-app/src/serviceWorker.js":"3"},{"size":481,"mtime":1692132459512,"results":"4","hashOfConfig":"5"},{"size":3800,"mtime":1692172119287,"results":"6","hashOfConfig":"5"},{"size":5341,"mtime":1692132486183,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3z62lx",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/biggiecheese/projects/react1/my-app/src/index.js",[],[],"/Users/biggiecheese/projects/react1/my-app/src/App.js",["18","19"],[],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\n\nconst App = () => {\n\n\n  var defaultPokemon = Math.floor(Math.random() * 1008);\n  const [pokemon, setPokemon] = useState(defaultPokemon);\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonType, setPokemonType] = useState(\"\");\n  var pokeID = \"\";\n  var [count, setCount] = useState(25);\n\n  const getPokemon = async () => {\n    const toArray = [];\n\n    try {\n      if (!isNaN(pokeID)){\n        console.log(\"number\");\n      } else {\n        pokeID = pokemon;\n        if (/\\s/.test(pokemon)) {\n            console.log(\"whitespace\")\n            pokeID = pokemon.replace(/\\s/g, '-')\n        }\n    }\n\n      console.log(pokeID);\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokeID}`;\n      const res = await axios.get(url);\n      toArray.push(res.data);\n      setPokemonType(res.data.types[0].type.name);\n      setPokemonData(toArray);\n      console.log(res.data.id);\n      setCount(res.data.id);\n      console.log(res);\n    } catch(e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (e) => {\n    setPokemon(e.target.value.toLowerCase())\n  }\n\n  const handleSubmit = (e) => {\n    console.log(e);\n    pokeID = e;\n    e.preventDefault();\n    getPokemon();\n  }\n\n  const increment = () => {\n    if (count < 1010) {\n        count++;\n        pokeID = count;\n        getPokemon();\n    }\n  }\n  const decrement = () => {\n    if (count > 1) {\n        count--;\n        pokeID = count;\n        getPokemon();\n    }\n  }\n\n  const pickRandom = () => {\n    pokeID = Math.floor(Math.random() * 1008);\n    getPokemon();\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" onChange={handleChange} placeholder=\"Enter Pokemon Name\"/>\n        </label>\n      </form>\n\n      {pokemonData.map((data) =>{\n        return(\n            <div className=\"container\">\n                <div className=\"appContainer\">\n                <img className=\"sprite\" src={data.sprites[\"front_default\"]}/>\n                <div className=\"divTable\">\n                    <div className=\"divTableBody\">\n                    <div className=\"divTableRow\">\n                        <div className=\"divTableCell\"> Name</div>\n                        <div className=\"divTableCell result\">{data.species.name.replace(\"-\", \" \")}</div>\n                    </div>\n                    <div className=\"divTableRow\">\n                        <div className=\"divTableCell\">Type</div>\n                        <div className=\"divTableCell result\">{pokemonType}</div>\n                    </div>\n                    <div className=\"divTableRow\">\n                        <div className=\"divTableCell\">Height</div>\n                        <div className=\"divTableCell result\">{\" \"}{Math.round(data.height * 3.9)} \"</div>\n                    </div>\n                    <div className=\"divTableRow\">\n                        <div className=\"divTableCell\">Weight</div>\n                        <div className=\"divTableCell result\">{\" \"}{Math.round(data.weight / 4.3)} lbs</div>\n                    </div>\n                    <div className=\"divTableRow\">\n                        <div className=\"divTableCell\">Game Index</div>\n                        <div className=\"divTableCell result\">{data.id}</div>\n                    </div>\n                    </div>\n                </div>\n                <div className=\"buttonContainer\">\n                    <button onClick={decrement}>Previous</button>\n                    <button onClick={increment}>Next</button>\n                    <button onClick={pickRandom}>Random</button>\n                </div>\n                </div>\n\n            </div>\n        )\n      })}\n    </div> \n  )\n\n}\n\nexport default App;\n","/Users/biggiecheese/projects/react1/my-app/src/serviceWorker.js",[],[],{"ruleId":"20","severity":1,"message":"21","line":3,"column":8,"nodeType":"22","messageId":"23","endLine":3,"endColumn":16},{"ruleId":"24","severity":1,"message":"25","line":87,"column":17,"nodeType":"26","endLine":87,"endColumn":78},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]